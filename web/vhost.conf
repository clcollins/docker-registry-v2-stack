# SSL ONLY
RewriteEngine On
RewriteCond %{HTTPS} !=on
RewriteRule ^/?(.*) https://%{HTTP_HOST}%{REQUEST_URI} [R,L]

<VirtualHost *:443>

  SSLEngine on
  # CERT AND KEY INFO IS IN THE SSL.CONF BY DEFAULT

  <If "! -z env('SITENAME')">
    RewriteEngine On
    RewriteCond %{HTTP_HOST} !=${SITENAME} [NC]
    RewriteRule .* https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L]
  </If>

  DocumentRoot /var/www/html

  <Directory "/var/www/html">
    Options -Indexes +FollowSymlinks
    AllowOverride All
  </Directory>

  SSLCompression off

  Header always set "Docker-Distribution-Api-Version" "registry/2.0"
  Header onsuccess set "Docker-Distribution-Api-Version" "registry/2.0"
  RequestHeader set X-Forwarded-Proto "https"
  RequestHeader set Authorization "true"

  ProxyRequests     off
  ProxyPreserveHost on

  # no proxy for /error/ (Apache HTTPd errors messages)
  ProxyPass /error/ !

  ProxyPass        /v2 http://registry:5000/v2
  ProxyPassReverse /v2 http://registry:5000/v2

  <Location /v2>
    #AuthType Basic
    #AuthName "Test"
    #AuthUserFile /tmp/auth
    AuthType Kerberos
    AuthName "Kerberos Login"
    KrbMethodK5Passwd On
    KrbMethodNegotiate On
    KrbVerifyKDC Off
    KrbAuthRealms <YOUR KERB REALMS>
    require valid-user

    #Satisfy Any

    # Read access to authentified users
    <Limit GET HEAD>
      Require valid-user
    </Limit>

    # Write access to docker-deployer only
    <Limit POST PUT DELETE PATCH>
      Require valid-user
    </Limit>

  </Location>

</VirtualHost>
